diff -p -up ./tools/synclient.c.tv2 ./tools/synclient.c
--- ./tools/synclient.c.tv2	2012-05-11 03:20:14.000000000 +0200
+++ ./tools/synclient.c	2012-05-31 08:55:40.863476286 +0200
@@ -167,9 +167,9 @@ parse_cmd(char *cmd, struct Parameter **
         int j;
         int found = 0;
 
-        *eqp = 0;
+	size_t size = (eqp - cmd);
         for (j = 0; params[j].name; j++) {
-            if (strcasecmp(cmd, params[j].name) == 0) {
+	    if (strncasecmp(cmd, params[j].name, size) == 0) {
                 found = 1;
                 break;
             }
@@ -354,7 +354,7 @@ dp_init()
 }
 
 static XDevice *
-dp_get_device(Display * dpy)
+dp_get_device(Display *dpy, int idx)
 {
     XDevice *dev = NULL;
     XDeviceInfo *info = NULL;
@@ -364,6 +364,7 @@ dp_get_device(Display * dpy)
     Atom *properties = NULL;
     int nprops = 0;
     int error = 0;
+    int showfinalerror = (idx < 1);
 
     touchpad_type = XInternAtom(dpy, XI_TOUCHPAD, True);
     synaptics_property = XInternAtom(dpy, SYNAPTICS_PROP_EDGES, True);
@@ -371,6 +372,10 @@ dp_get_device(Display * dpy)
 
     while (ndevices--) {
         if (info[ndevices].type == touchpad_type) {
+	    if (idx > 0) {
+		--idx;
+		continue;
+	    }
             dev = XOpenDevice(dpy, info[ndevices].id);
             if (!dev) {
                 fprintf(stderr, "Failed to open device '%s'.\n",
@@ -406,7 +411,8 @@ dp_get_device(Display * dpy)
     XFree(properties);
     XFreeDeviceList(info);
     if (!dev)
-        fprintf(stderr, "Unable to find a synaptics device.\n");
+	if (showfinalerror)
+	    fprintf(stderr, "Unable to find a synaptics device.\n");
     else if (error && dev) {
         XCloseDevice(dpy, dev);
         dev = NULL;
@@ -596,6 +602,7 @@ main(int argc, char *argv[])
     int do_monitor = 0;
     int dump_settings = 0;
     int first_cmd;
+    int idx = 0;
 
     Display *dpy;
     XDevice *dev;
@@ -631,14 +638,33 @@ main(int argc, char *argv[])
         shm_process_commands(do_monitor, delay);
 
     dpy = dp_init();
-    if (!dpy || !(dev = dp_get_device(dpy)))
+    if (!dpy)
         return 1;
 
-    dp_set_variables(dpy, dev, argc, argv, first_cmd);
-    if (dump_settings)
-        dp_show_settings(dpy, dev);
+    /* Apply the settings changes to all synaptics devices */
+    while ((dev = dp_get_device(dpy, idx++))) {
+	dp_set_variables(dpy, dev, argc, argv, first_cmd);
+	XCloseDevice(dpy, dev);
+    }
+
+    /* If we didn't open any devices just return. */
+    if (idx < 2) {
+	XCloseDisplay(dpy);
+	return 1;
+    }
+
+    if (dump_settings) {
+	/* Reopen the last one we found to print it out...
+	   This is not really ideal, but it'll do to allow the basic tools to continue */
+	dev = dp_get_device(dpy, (idx - 2));
+	if (!dev) {
+	    XCloseDisplay(dpy);
+	    return 1;
+	}
 
-    XCloseDevice(dpy, dev);
+	dp_show_settings(dpy, dev);
+	XCloseDevice(dpy, dev);
+    }
     XCloseDisplay(dpy);
 
     return 0;

